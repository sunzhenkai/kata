{
    "data": [
        {
            "name": "lru",
            "desc": "lru"
        },
        {
            "name": "quick sort",
            "desc": "quick sort"
        },
        {
            "name": "calculator",
            "desc": "表达式解析"
        },
        {
            "name": "剑指 Offer 03. 数组中重复的数字",
            "desc": "找出数组中重复的数字。\n\n\n在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。\n\n示例 1：\n\n输入：\n[2, 3, 1, 0, 2, 5, 3]\n输出：2 或 3\n\n\n限制：\n\n2 <= n <= 100000\n\n\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n"
        },
        {
            "name": "剑指 Offer 04. 二维数组中的查找",
            "desc": "在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。\n\n\n\n示例:\n\n现有矩阵 matrix 如下：\n\n[\n[1,   4,  7, 11, 15],\n[2,   5,  8, 12, 19],\n[3,   6,  9, 16, 22],\n[10, 13, 14, 17, 24],\n[18, 21, 23, 26, 30]\n]\n给定 target = 5，返回 true。\n\n给定 target = 20，返回 false。\n\n\n\n限制：\n\n0 <= n <= 1000\n\n0 <= m <= 1000\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n"
        },
        {
            "name": "剑指 Offer 05. 替换空格",
            "desc": "请实现一个函数，把字符串 s 中的每个空格替换成\"%20\"。\n\n\n\n示例 1：\n\n输入：s = \"We are happy.\"\n输出：\"We%20are%20happy.\"\n\n\n限制：\n\n0 <= s 的长度 <= 10000\n\n\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/ti-huan-kong-ge-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"
        },
        {
            "name": "剑指 Offer 06. 从尾到头打印链表",
            "desc": "输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。\n\n\n\n示例 1：\n\n输入：head = [1,3,2]\n输出：[2,3,1]\n\n\n限制：\n\n0 <= 链表长度 <= 10000\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n"
        },
        {
            "name": "剑指 Offer 07. 重建二叉树",
            "desc": "输入某二叉树的前序遍历和中序遍历的结果，请重建该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。\n\n\n\n例如，给出\n\n前序遍历 preorder = [3,9,20,15,7]\n中序遍历 inorder = [9,3,15,20,7]\n返回如下的二叉树：\n\n3\n/ \\\n9  20\n/  \\\n15   7\n\n\n限制：\n\n0 <= 节点个数 <= 500\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n"
        },
        {
            "name": "剑指 Offer 09. 用两个栈实现队列",
            "desc": "用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )\n\n\n\n示例 1：\n\n输入：\n[\"CQueue\",\"appendTail\",\"deleteHead\",\"deleteHead\"]\n[[],[3],[],[]]\n输出：[null,null,3,-1]\n示例 2：\n\n输入：\n[\"CQueue\",\"deleteHead\",\"appendTail\",\"appendTail\",\"deleteHead\",\"deleteHead\"]\n[[],[],[5],[2],[],[]]\n输出：[null,-1,null,null,5,2]\n提示：\n\n1 <= values <= 10000\n最多会对 appendTail、deleteHead 进行 10000 次调用\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n"
        },
        {
            "name": "剑指 Offer 10- I. 斐波那契数列",
            "desc": "写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：\n\nF(0) = 0,   F(1) = 1\nF(N) = F(N - 1) + F(N - 2), 其中 N > 1.\n斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。\n\n答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。\n\n\n\n示例 1：\n\n输入：n = 2\n输出：1\n示例 2：\n\n输入：n = 5\n输出：5\n\n\n提示：\n\n0 <= n <= 100\n\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"
        },
        {
            "name": "剑指 Offer 10- II. 青蛙跳台阶问题",
            "desc": "一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。\n\n答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。\n\n示例 1：\n\n输入：n = 2\n输出：2\n示例 2：\n\n输入：n = 7\n输出：21\n示例 3：\n\n输入：n = 0\n输出：1\n提示：\n\n0 <= n <= 100\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n"
        },
        {
            "name": "剑指 Offer 11. 旋转数组的最小数字",
            "desc": "把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组 [3,4,5,1,2] 为 [1,2,3,4,5] 的一个旋转，该数组的最小值为1。\n\n示例 1：\n\n输入：[3,4,5,1,2]\n输出：1\n示例 2：\n\n输入：[2,2,2,0,1]\n输出：0\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/xuan-zhuan-shu-zu-de-zui-xiao-shu-zi-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n"
        },
        {
            "name": "剑指 Offer 12. 矩阵中的路径",
            "desc": "请设计一个函数，用来判断在一个矩阵中是否存在一条包含某字符串所有字符的路径。路径可以从矩阵中的任意一格开始，每一步可以在矩阵中向左、右、上、下移动一格。如果一条路径经过了矩阵的某一格，那么该路径不能再次进入该格子。例如，在下面的3×4的矩阵中包含一条字符串“bfce”的路径（路径中的字母用加粗标出）。\n\n[[\"a\",\"b\",\"c\",\"e\"],\n[\"s\",\"f\",\"c\",\"s\"],\n[\"a\",\"d\",\"e\",\"e\"]]\n\n但矩阵中不包含字符串“abfb”的路径，因为字符串的第一个字符b占据了矩阵中的第一行第二个格子之后，路径不能再次进入这个格子。\n\n\n\n示例 1：\n\n输入：board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"\n输出：true\n示例 2：\n\n输入：board = [[\"a\",\"b\"],[\"c\",\"d\"]], word = \"abcd\"\n输出：false\n\n\n提示：\n\n1 <= board.length <= 200\n1 <= board[i].length <= 200\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"
        },
        {
            "name": "剑指 Offer 13. 机器人的运动范围",
            "desc": "地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？\n\n\n\n示例 1：\n\n输入：m = 2, n = 3, k = 1\n输出：3\n示例 2：\n\n输入：m = 3, n = 1, k = 0\n输出：1\n提示：\n\n1 <= n,m <= 100\n0 <= k <= 20\n\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n"
        },
        {
            "name": "剑指 Offer 14- I. 剪绳子",
            "desc": "给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],k[1]...k[m-1] 。请问 k[0]*k[1]*...*k[m-1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。\n\n示例 1：\n\n输入: 2\n输出: 1\n解释: 2 = 1 + 1, 1 × 1 = 1\n示例 2:\n\n输入: 10\n输出: 36\n解释: 10 = 3 + 3 + 4, 3 × 3 × 4 = 36\n提示：\n\n2 <= n <= 58\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/jian-sheng-zi-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"
        },
        {
            "name": "剑指 Offer 14- II. 剪绳子 II",
            "desc": "给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],k[1]...k[m - 1] 。请问 k[0]*k[1]*...*k[m - 1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。\n\n答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。\n\n\n\n示例 1：\n\n输入: 2\n输出: 1\n解释: 2 = 1 + 1, 1 × 1 = 1\n示例 2:\n\n输入: 10\n输出: 36\n解释: 10 = 3 + 3 + 4, 3 × 3 × 4 = 36\n\n\n提示：\n\n2 <= n <= 1000\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/jian-sheng-zi-ii-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n"
        },
        {
            "name": "剑指 Offer 15. 二进制中1的个数",
            "desc": "请实现一个函数，输入一个整数（以二进制串形式），输出该数二进制表示中 1 的个数。例如，把 9 表示成二进制是 1001，有 2 位是 1。因此，如果输入 9，则该函数输出 2。\n\n\n\n示例 1：\n\n输入：00000000000000000000000000001011\n输出：3\n解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。\n示例 2：\n\n输入：00000000000000000000000010000000\n输出：1\n解释：输入的二进制串 00000000000000000000000010000000 中，共有一位为 '1'。\n示例 3：\n\n输入：11111111111111111111111111111101\n输出：31\n解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。\n\n\n提示：\n\n输入必须是长度为 32 的 二进制串 。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/er-jin-zhi-zhong-1de-ge-shu-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"
        },
        {
            "name": "剑指 Offer 16. 数值的整数次方",
            "desc": "实现 pow(x, n) ，即计算 x 的 n 次幂函数（即，xn）。不得使用库函数，同时不需要考虑大数问题。\n\n\n\n示例 1：\n\n输入：x = 2.00000, n = 10\n输出：1024.00000\n示例 2：\n\n输入：x = 2.10000, n = 3\n输出：9.26100\n示例 3：\n\n输入：x = 2.00000, n = -2\n输出：0.25000\n解释：2-2 = 1/22 = 1/4 = 0.25\n\n\n提示：\n\n-100.0 < x < 100.0\n-231 <= n <= 231-1\n-104 <= xn <= 104\n\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/shu-zhi-de-zheng-shu-ci-fang-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"
        },
        {
            "name": "剑指 Offer 17. 打印从1到最大的n位数",
            "desc": "输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。\n\n示例 1:\n\n输入: n = 1\n输出: [1,2,3,4,5,6,7,8,9]\n\n\n说明：\n\n用返回一个整数列表来代替打印\nn 为正整数\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/da-yin-cong-1dao-zui-da-de-nwei-shu-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"
        },
        {
            "name": "剑指 Offer 18. 删除链表的节点",
            "desc": "给定单向链表的头指针和一个要删除的节点的值，定义一个函数删除该节点。\n\n返回删除后的链表的头节点。\n\n注意：此题对比原题有改动\n\n示例 1:\n\n输入: head = [4,5,1,9], val = 5\n输出: [4,1,9]\n解释: 给定你链表中值为 5 的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -> 1 -> 9.\n示例 2:\n\n输入: head = [4,5,1,9], val = 1\n输出: [4,5,9]\n解释: 给定你链表中值为 1 的第三个节点，那么在调用了你的函数之后，该链表应变为 4 -> 5 -> 9.\n\n\n说明：\n\n题目保证链表中节点的值互不相同\n若使用 C 或 C++ 语言，你不需要 free 或 delete 被删除的节点\n\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/shan-chu-lian-biao-de-jie-dian-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"
        },
        {
            "name": "剑指 Offer 19. 正则表达式匹配",
            "desc": "请实现一个函数用来匹配包含'. '和'*'的正则表达式。模式中的字符'.'表示任意一个字符，而'*'表示它前面的字符可以出现任意次（含0次）。在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串\"aaa\"与模式\"a.a\"和\"ab*ac*a\"匹配，但与\"aa.a\"和\"ab*a\"均不匹配。\n\n示例 1:\n\n输入:\ns = \"aa\"\np = \"a\"\n输出: false\n解释: \"a\" 无法匹配 \"aa\" 整个字符串。\n示例 2:\n\n输入:\ns = \"aa\"\np = \"a*\"\n输出: true\n解释: 因为 '*' 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 'a'。因此，字符串 \"aa\" 可被视为 'a' 重复了一次。\n示例 3:\n\n输入:\ns = \"ab\"\np = \".*\"\n输出: true\n解释: \".*\" 表示可匹配零个或多个（'*'）任意字符（'.'）。\n示例 4:\n\n输入:\ns = \"aab\"\np = \"c*a*b\"\n输出: true\n解释: 因为 '*' 表示零个或多个，这里 'c' 为 0 个, 'a' 被重复一次。因此可以匹配字符串 \"aab\"。\n示例 5:\n\n输入:\ns = \"mississippi\"\np = \"mis*is*p*.\"\n输出: false\ns 可能为空，且只包含从 a-z 的小写字母。\np 可能为空，且只包含从 a-z 的小写字母以及字符 . 和 *，无连续的 '*'。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/zheng-ze-biao-da-shi-pi-pei-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"
        },
        {
            "name": "剑指 Offer 20. 表示数值的字符串",
            "desc": "请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串\"+100\"、\"5e2\"、\"-123\"、\"3.1416\"、\"-1E-16\"、\"0123\"都表示数值，但\"12e\"、\"1a3.14\"、\"1.2.3\"、\"+-5\"及\"12e+5.4\"都不是。\n\n\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/biao-shi-shu-zhi-de-zi-fu-chuan-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"
        }
    ]
}